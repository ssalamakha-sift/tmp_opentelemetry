name: Create java image Release on merge event

on:
  pull_request_target:
    types:
      - closed
    paths:
      - 'sift-java-base/Dockerfile'

jobs:
  create_release:
    if: github.event.pull_request.merged == true
    env:
      DOCKERFILE_PATH: "./sift-java-base"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Prepare Release metadata 
        run: |
          set -euxo pipefail
          JAVA_OPENJDK_NAME=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' |  awk -F: '{print $1}' | tr / -)
          JAVA_OPENJDK_VEERSION=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F: '{print $2}')
          OPEN_TELEMETRY_VERSION=$(grep -E "^ARG OPEN_TELEMETRY_VERSION.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F= '{print $2}' | head -1)
          CLOUD_PROFILER_VERSION=$(grep -E "^ARG CLOUD_PROFILER_VERSION.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F= '{print $2}' | head -1)
          printf '%s\n' "JAVA_OPENJDK_NAME=$JAVA_OPENJDK_NAME" "JAVA_OPENJDK_VEERSION=$JAVA_OPENJDK_VEERSION" "OPEN_TELEMETRY_VERSION=$OPEN_TELEMETRY_VERSION" "CLOUD_PROFILER_VERSION=$CLOUD_PROFILER_VERSION" > ./release_notes.md
          JAVA_LAST_TAG=$( git tag --sort=-creatordate | grep java | head -1 | cut -d "_" -f1 | cut -d "v" -f2)
          [[ -z $JAVA_LAST_TAG ]] && JAVA_LAST_TAG=1 || JAVA_LAST_TAG=$((JAVA_LAST_TAG + 1))
          JAVA_LAST_TAG="v"$JAVA_LAST_TAG"_java"
          echo "JAVA_LAST_TAG=$JAVA_LAST_TAG" >> $GITHUB_ENV
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const {JAVA_LAST_TAG} = process.env          
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${JAVA_LAST_TAG}`,
                sha: context.sha
            })
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.JAVA_LAST_TAG }}
          release_name: 'Release DOCKER_IMAGE_FOR:java'
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}






