name: JavaImage2Gcr

on:
  release:
    types: [published]
    paths:
    - 'sift-java-base/**'

env:
  REGESTRY: gcr.io
  PROJECT_ID: sift-shared-data
  DOCKERFILE_PATH: "./sift-java-base"  

jobs:
  build_and_publish:
    runs-on: ubuntu-latest  
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Parse metadata 
        run: |
          set -euxo pipefail

          curr_tag=$(git tag --sort=-creatordate | sed -n 1p)
          prev_tag=$(git tag --sort=-creatordate | sed -n 2p)


          curr_tag_commit=$(git rev-list -n 1 tags/$curr_tag)
          prev_tag_commit=$(git rev-list -n 1 tags/$prev_tag)

          current_commit=${{ github.sha }}
          echo $(git diff-tree --no-commit-id --name-only -r $current_commit)


          diff1=$(git diff --name-only $curr_tag $prev_tag)
          echo $diff1

          echo "start"
          ls -la
          set -euxo pipefail
          JAVA_OPENJDK_NAME=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F'/'  '{print $2}' | awk -F: '{print $1}')
          JAVA_OPENJDK_VEERSION=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F'/'  '{print $2}' | awk -F: '{print $2}')
          VER=${{ github.event.release.tag_name }} 

          [ -d "$DOCKERFILE_PATH" ] && cd $DOCKERFILE_PATH  
          IMAGE_NAME="$JAVA_OPENJDK_NAME"
          IMAGE_TAG="$JAVA_OPENJDK_VEERSION-$VER"

          [ -z "$IMAGE_NAME" ] || [ -z "$IMAGE_TAG" ] && echo "Failed on parsing $DOCKERFILE_PATH/Dockerfile , IMAGE NAME or TAG is NOT FOUND" && exit 1
          echo "end"
      - name: Push Dockerfile
        run: |
          current_commit=${{ github.sha }}
          echo $current_commit