name: JavaImage2Gcr

on:
  release:
    types: [published]

env:
  REGESTRY: gcr.io
  PROJECT_ID: sift-shared-data
  DOCKERFILE_PATH: "./sift-java-base"  

jobs:
  build_and_publish:
    runs-on: ubuntu-latest  
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Parse metadata 
        run: |
          set -euxo pipefail

          IS_FIRST_TAG=false
          IS_DOCKERFILE_CHANGED=false
          DIFF=''

          CURR_TAG=$(git tag --sort=-creatordate | sed -n 1p)
          PREV_TAG=$(git tag --sort=-creatordate | sed -n 2p)

          [ -z $PREV_TAG ] && IS_FIRST_TAG=true

          CURR_COMMIT=${{ github.sha }}

          if [ "$IS_FIRST_TAG" = true ]; then
            DIFF=$(git diff-tree --no-commit-id --name-only --diff-filter=ACMRT -r $CURR_COMMIT | xargs)
          else   
            DIFF=$(git diff --name-only --diff-filter=ACMRT $CURR_TAG $PREV_TAG | xargs)
          fi

          echo $DIFF

          echo "TEST"

          [[ $DIFF == *"sift-java-base/Dockerfile"* ]] && IS_DOCKERFILE_CHANGED=true

          [ "$IS_DOCKERFILE_CHANGED" = false ] && echo "Current release does not contain changes in sift-java-base/Dockerfile"  && exit 1

          JAVA_OPENJDK_NAME=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F'/'  '{print $2}' | awk -F: '{print $1}')
          JAVA_OPENJDK_VEERSION=$(grep -E "^FROM.*jdk.*$" $DOCKERFILE_PATH/Dockerfile | awk -F' '  '{print $2}' | awk -F'/'  '{print $2}' | awk -F: '{print $2}')
          VER=${{ github.event.release.tag_name }} 

          [ -d "$DOCKERFILE_PATH" ] && cd $DOCKERFILE_PATH  
          IMAGE_NAME="$JAVA_OPENJDK_NAME"
          echo $IMAGE_NAME
          IMAGE_TAG="$JAVA_OPENJDK_VEERSION-$VER"
          echo $IMAGE_TAG

          if [ -z "$IMAGE_NAME" ] || [ -z "$IMAGE_TAG" ]; then
            echo "Failed on parsing $DOCKERFILE_PATH/Dockerfile , IMAGE NAME or TAG is NOT FOUND"
            exit 1
          fi

      - name: Push Dockerfile
        run: |
          current_commit=${{ github.sha }}
          echo $current_commit